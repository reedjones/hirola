# Generated by Django 2.0.7 on 2018-07-06 13:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('topics', '0002_tag'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceBookmark',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_on', models.DateField(auto_now=True)),
                ('saved_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='saved_services', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceInspector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_on', models.DateTimeField(auto_now=True)),
                ('reason', models.CharField(choices=[('B', 'Content does not meet quality standards'), ('I', 'There are not enough details in your positing'), ('M', 'Change one or more of the media files in your posting'), ('S', 'Your posting contains too many spelling or grammatical errors'), ('D', 'This posting is duplicate content'), ('T', 'This kind of content is not allowed on ZaStovku'), ('O', 'See admin notes')], default='O', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('w', 'waiting'), ('r', 'requested'), ('a', 'approved'), ('p', 'published'), ('i', 'inactive'), ('d', 'denied')], max_length=50)),
                ('details', models.TextField(blank=True, default=None, null=True)),
                ('edit_locked', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='topics.Category')),
                ('offered_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='services_offered', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, default=None, to='topics.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered_at', models.DateTimeField(auto_now=True)),
                ('ordered_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='outgoing_orders', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_requests', to='services.ServiceOffer')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reviews', to='services.ServiceOffer')),
            ],
        ),
        migrations.AddField(
            model_name='serviceinspector',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='admin_notes', to='services.ServiceOffer'),
        ),
        migrations.AddField(
            model_name='servicebookmark',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookmarks', to='services.ServiceOffer'),
        ),
    ]
